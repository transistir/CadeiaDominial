#!/bin/bash

# Script SEGURO para corrigir o Problema 1: ALLOWED_HOSTS
# Este script aplica a corre√ß√£o sem rebuild do container

echo "üîß CORRIGINDO PROBLEMA 1: ALLOWED_HOSTS (M√âTODO SEGURO)"
echo "====================================================="

# Verificar se estamos no diret√≥rio correto
if [ ! -f "docker-compose.yml" ]; then
    echo "‚ùå Erro: Execute este script no diret√≥rio raiz do projeto"
    exit 1
fi

echo ""
echo "üìã AN√ÅLISE DO PROBLEMA:"
echo "----------------------"
echo "‚Ä¢ Erro: Invalid HTTP_HOST header: '20xgeorgia.me'"
echo "‚Ä¢ Causa: Bots maliciosos tentando acessar o servidor"
echo "‚Ä¢ M√©todo: Aplica√ß√£o segura sem rebuild"
echo ""

echo "üîç VERIFICANDO STATUS ATUAL:"
echo "---------------------------"

# Verificar se o Docker est√° rodando
if ! docker info > /dev/null 2>&1; then
    echo "‚ùå Erro: Docker n√£o est√° rodando"
    exit 1
fi

# Verificar se os containers est√£o rodando
if ! docker-compose ps | grep -q "cadeia_dominial_nginx"; then
    echo "‚ùå Container nginx n√£o est√° rodando"
    echo "   Iniciando containers..."
    docker-compose up -d
    sleep 5
fi

echo "‚úÖ Container nginx est√° rodando"

echo ""
echo "üìã OP√á√ïES DE CORRE√á√ÉO:"
echo "--------------------"

echo "1. üîí M√âTODO SEGURO (Recomendado):"
echo "   ‚Ä¢ Copiar arquivo de configura√ß√£o para dentro do container"
echo "   ‚Ä¢ Recarregar configura√ß√£o do Nginx"
echo "   ‚Ä¢ Sem rebuild, sem downtime"
echo ""

echo "2. ‚ö†Ô∏è M√âTODO COMPLETO:"
echo "   ‚Ä¢ Rebuild do container nginx"
echo "   ‚Ä¢ Pode causar downtime"
echo ""

echo "‚ùì Qual m√©todo voc√™ prefere? (1 ou 2)"
read -r metodo

if [ "$metodo" = "1" ]; then
    echo ""
    echo "üöÄ APLICANDO M√âTODO SEGURO..."
    echo "----------------------------"
    
    # Verificar se o arquivo de configura√ß√£o existe
    if [ ! -f "nginx/conf.d/default.conf" ]; then
        echo "‚ùå Arquivo nginx/conf.d/default.conf n√£o encontrado"
        exit 1
    fi
    
    # Fazer backup da configura√ß√£o atual
    echo "üìã Fazendo backup da configura√ß√£o atual..."
    docker-compose exec nginx cp /etc/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf.backup
    
    # Copiar nova configura√ß√£o para o container
    echo "üìã Copiando nova configura√ß√£o..."
    docker cp nginx/conf.d/default.conf cadeia_dominial_nginx:/etc/nginx/conf.d/default.conf
    
    # Testar configura√ß√£o do Nginx
    echo "üîç Testando configura√ß√£o do Nginx..."
    if docker-compose exec nginx nginx -t; then
        echo "‚úÖ Configura√ß√£o do Nginx v√°lida"
        
        # Recarregar configura√ß√£o do Nginx
        echo "üîÑ Recarregando configura√ß√£o do Nginx..."
        docker-compose exec nginx nginx -s reload
        
        echo "‚úÖ Configura√ß√£o aplicada com sucesso!"
    else
        echo "‚ùå Configura√ß√£o do Nginx inv√°lida"
        echo "üîÑ Restaurando backup..."
        docker-compose exec nginx cp /etc/nginx/conf.d/default.conf.backup /etc/nginx/conf.d/default.conf
        docker-compose exec nginx nginx -s reload
        echo "‚úÖ Backup restaurado"
        exit 1
    fi
    
elif [ "$metodo" = "2" ]; then
    echo ""
    echo "‚ö†Ô∏è APLICANDO M√âTODO COMPLETO..."
    echo "-----------------------------"
    
    echo "üîÑ Reconstruindo container nginx..."
    docker-compose build nginx
    
    echo "üîÑ Reiniciando container nginx..."
    docker-compose restart nginx
    
    # Verificar se o container est√° rodando
    sleep 5
    if docker-compose ps | grep -q "cadeia_dominial_nginx.*Up"; then
        echo "‚úÖ Container nginx reiniciado com sucesso"
    else
        echo "‚ùå Erro ao reiniciar container nginx"
        echo "Verificando logs..."
        docker-compose logs nginx
        exit 1
    fi
    
else
    echo "‚ùå Op√ß√£o inv√°lida"
    exit 1
fi

echo ""
echo "üîç VERIFICANDO STATUS:"
echo "--------------------"

# Verificar se o container est√° rodando
if docker-compose ps | grep -q "cadeia_dominial_nginx.*Up"; then
    echo "‚úÖ Container nginx funcionando"
else
    echo "‚ùå Container nginx com problemas"
    exit 1
fi

echo ""
echo "üìä TESTANDO CONFIGURA√á√ÉO:"
echo "------------------------"

# Testar se a configura√ß√£o est√° funcionando
echo "Testando acesso leg√≠timo..."
if curl -s -H "Host: 46.62.152.252" http://localhost/health > /dev/null 2>&1; then
    echo "‚úÖ Acesso leg√≠timo funcionando"
else
    echo "‚ö†Ô∏è Acesso leg√≠timo com problemas"
fi

echo ""
echo "üöÄ PR√ìXIMOS PASSOS:"
echo "------------------"
echo "1. Monitorar logs para verificar se os ataques foram bloqueados:"
echo "   docker-compose logs -f nginx"
echo ""
echo "2. Verificar logs do Django para confirmar redu√ß√£o de erros ALLOWED_HOSTS:"
echo "   docker-compose logs -f web"
echo ""
echo "3. Testar acesso malicioso (deve retornar 444):"
echo "   curl -H 'Host: 20xgeorgia.me' http://localhost/"
echo ""

echo "‚úÖ Problema 1 corrigido com m√©todo seguro!"
echo ""
echo "üìù NOTA: Se algo der errado, o backup foi salvo em:"
echo "   /etc/nginx/conf.d/default.conf.backup (dentro do container)" 