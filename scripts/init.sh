#!/bin/bash

# Script de inicializa√ß√£o do Cadeia Dominial
# Este script automatiza o processo de setup inicial do sistema

set -e  # Para o script se houver erro

echo "üöÄ Iniciando setup do Cadeia Dominial..."

# Fun√ß√£o para criar superusu√°rio padr√£o
create_default_user() {
    echo "üë§ Criando usu√°rio padr√£o..."
    
    # Verifica se j√° existe um superusu√°rio
    if python manage.py shell -c "from django.contrib.auth.models import User; print('Superusu√°rio existe:', User.objects.filter(is_superuser=True).exists())" | grep -q "True"; then
        echo "‚úÖ Superusu√°rio j√° existe, pulando cria√ß√£o..."
        return
    fi
    
    # Obter credenciais das vari√°veis de ambiente
    ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
    ADMIN_EMAIL=${ADMIN_EMAIL:-admin@cadeiadominial.com.br}
    ADMIN_PASSWORD=${ADMIN_PASSWORD}
    
    # Verificar se a senha foi fornecida
    if [ -z "$ADMIN_PASSWORD" ]; then
        echo "‚ùå ERRO: Vari√°vel ADMIN_PASSWORD n√£o foi definida!"
        echo ""
        echo "üîß Para definir a senha do usu√°rio admin, use uma das op√ß√µes:"
        echo ""
        echo "Op√ß√£o 1 - Vari√°vel de ambiente:"
        echo "   export ADMIN_PASSWORD='sua_senha_segura'"
        echo "   docker-compose up -d"
        echo ""
        echo "Op√ß√£o 2 - Arquivo .env:"
        echo "   echo 'ADMIN_PASSWORD=sua_senha_segura' >> .env"
        echo "   docker-compose up -d"
        echo ""
        echo "Op√ß√£o 3 - Linha de comando:"
        echo "   ADMIN_PASSWORD='sua_senha_segura' docker-compose up -d"
        echo ""
        echo "‚ö†Ô∏è  IMPORTANTE: Use uma senha forte com pelo menos 8 caracteres!"
        exit 1
    fi
    
    # Validar senha (m√≠nimo 8 caracteres)
    if [ ${#ADMIN_PASSWORD} -lt 8 ]; then
        echo "‚ùå ERRO: A senha deve ter pelo menos 8 caracteres!"
        echo "   Senha atual: ${#ADMIN_PASSWORD} caracteres"
        exit 1
    fi
    
    # Cria superusu√°rio com credenciais das vari√°veis de ambiente
    echo "from django.contrib.auth.models import User; User.objects.create_superuser('$ADMIN_USERNAME', '$ADMIN_EMAIL', '$ADMIN_PASSWORD') if not User.objects.filter(username='$ADMIN_USERNAME').exists() else None" | python manage.py shell
    
    echo "‚úÖ Usu√°rio padr√£o criado:"
    echo "   Usu√°rio: $ADMIN_USERNAME"
    echo "   Email: $ADMIN_EMAIL"
    echo "   Senha: [DEFINIDA VIA VARI√ÅVEL DE AMBIENTE]"
    echo ""
    echo "üîë ACESSO AO SISTEMA:"
    echo "   URL: https://cadeiadominial.com.br"
    echo "   Usu√°rio: $ADMIN_USERNAME"
    echo "   Senha: [A senha que voc√™ definiu]"
}

# Fun√ß√£o para importar terras ind√≠genas
import_terras_indigenas() {
    echo "üèûÔ∏è Importando terras ind√≠genas da FUNAI..."
    
    # Verifica se j√° existem terras ind√≠genas importadas
    if python manage.py shell -c "from dominial.models import TerraIndigenaReferencia; print('TIs importadas:', TerraIndigenaReferencia.objects.count())" | grep -q "0"; then
        echo "üì• Importando terras ind√≠genas..."
        python manage.py importar_terras_indigenas --apenas-referencia
        python manage.py criar_tis_da_referencia
        echo "‚úÖ Terras ind√≠genas importadas com sucesso!"
    else
        echo "‚úÖ Terras ind√≠genas j√° foram importadas anteriormente."
    fi
}

# Fun√ß√£o para criar tipos de documento e lan√ßamento
create_default_types() {
    echo "üìã Criando tipos padr√£o de documento e lan√ßamento..."
    
    # Verifica se j√° existem tipos criados
    if python manage.py shell -c "from dominial.models import DocumentoTipo; print('Tipos de documento:', DocumentoTipo.objects.count())" | grep -q "0"; then
        echo "üìÑ Criando tipos de documento..."
        python manage.py criar_tipos_documento
        echo "‚úÖ Tipos de documento criados!"
    else
        echo "‚úÖ Tipos de documento j√° existem."
    fi
    
    # Verifica se j√° existem tipos de lan√ßamento
    if python manage.py shell -c "from dominial.models import LancamentoTipo; print('Tipos de lan√ßamento:', LancamentoTipo.objects.count())" | grep -q "0"; then
        echo "üìù Criando tipos de lan√ßamento..."
        python manage.py criar_tipos_lancamento
        echo "‚úÖ Tipos de lan√ßamento criados!"
    else
        echo "‚úÖ Tipos de lan√ßamento j√° existem."
    fi
    
    # Verifica se j√° existem tipos de documento-lan√ßamento
    if python manage.py shell -c "from dominial.models import DocumentoTipo, LancamentoTipo; print('Tipos documento:', DocumentoTipo.objects.count(), 'Tipos lan√ßamento:', LancamentoTipo.objects.count())" | grep -q "0"; then
        echo "üîó Criando tipos de documento-lan√ßamento..."
        python manage.py criar_tipos_documento_lancamento
        echo "‚úÖ Tipos de documento-lan√ßamento criados!"
    else
        echo "‚úÖ Tipos de documento-lan√ßamento j√° existem."
    fi
}

# Fun√ß√£o para executar migra√ß√µes
run_migrations() {
    echo "üîÑ Executando migra√ß√µes..."
    python manage.py migrate
    echo "‚úÖ Migra√ß√µes conclu√≠das!"
}

# Fun√ß√£o para coletar arquivos est√°ticos
collect_static() {
    echo "üì¶ Verificando arquivos est√°ticos..."
    # Os arquivos est√°ticos j√° foram coletados durante o build
    # Apenas verifica se o diret√≥rio existe
    if [ -d "/app/staticfiles" ]; then
        echo "‚úÖ Arquivos est√°ticos j√° coletados durante o build."
    else
        echo "‚ö†Ô∏è Diret√≥rio staticfiles n√£o encontrado, coletando..."
        python manage.py collectstatic --noinput
        echo "‚úÖ Arquivos est√°ticos coletados!"
    fi
}

# Fun√ß√£o principal
main() {
    echo "=========================================="
    echo "   CADEIA DOMINIAL - SETUP AUTOM√ÅTICO"
    echo "=========================================="
    
    # Executa as fun√ß√µes na ordem correta
    run_migrations
    create_default_types
    create_default_user
    import_terras_indigenas
    collect_static
    
    echo ""
    echo "üéâ Setup conclu√≠do com sucesso!"
    echo ""
    echo "üìã RESUMO:"
    echo "   ‚úÖ Migra√ß√µes executadas"
    echo "   ‚úÖ Tipos padr√£o criados"
    echo "   ‚úÖ Usu√°rio admin criado"
    echo "   ‚úÖ Terras ind√≠genas importadas"
    echo "   ‚úÖ Arquivos est√°ticos coletados"
    echo ""
    echo "üîë ACESSO AO SISTEMA:"
    echo "   URL: https://cadeiadominial.com.br"
    echo "   Usu√°rio: admin"
    echo "   Senha: admin123"
    echo ""
    echo "‚ö†Ô∏è  IMPORTANTE: Altere a senha do usu√°rio admin ap√≥s o primeiro login!"
    echo "=========================================="
    
    echo ""
    echo "üöÄ Iniciando servidor Gunicorn..."
    echo "=========================================="
    
    # Inicia o Gunicorn
    exec gunicorn --bind 0.0.0.0:8000 --workers 3 cadeia_dominial.wsgi:application
}

# Executa a fun√ß√£o principal
main "$@" 